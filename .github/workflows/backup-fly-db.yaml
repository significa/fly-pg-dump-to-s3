name: Backup fly DB

on:
  workflow_call:
    inputs:
      fly-db-name:
        description: >-
          The Fly app name of your db.
          Advanced: you can also use the private network hostname of app/region/machine
        required: true
        type: string
      timeout:
        description: Backup GitHub action step timeout, in minutes.
        required: false
        type: number
      action-ref:
        description: >-
          The `ref` to clone the trigger backup script from. Allows to override GitHub's context
          `github.action_ref` when it does not behave properly.
        required: false
        default: ${{ github.action_ref }}
        type: string
      apt_packages:
        description: >-
          APT packages to install (Refer to Ubuntu's APT registry).
          For example: `postgresql-client-17` for pinning the pg_dump to version 17.
        required: false
        type: string

    secrets:
      FLY_API_TOKEN:
        required: true
      DATABASE_URL:
        description:  >-
          The URL used to connect and dump the database. Since we are using `flyctl proxy` it is 
          expected an URL with host localhost and port 5432.
          Example: `postgresql://username:password@localhost:5432/my-db-name`
        required: true
      S3_DESTINATION_URL:
        description: >-
          The AWS S3 compatible backup target.
          Example: `s3://bucket/backup.sql`
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  backup_db:
    name: Perform database backups
    runs-on: ubuntu-latest
    concurrency: ${{ github.workflow }}-fly-db-backup
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: pip install awscli

      - name: Install APT packages
        if: ${{ inputs.apt_packages }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ inputs.apt_packages }}

      - uses: actions/checkout@v4
        with:
          repository: significa/fly-pg-dump-to-s3
          path: ./fly-pg-dump-to-s3
          ref: ${{ inputs.action-ref }}

      - run: flyctl proxy 5432:5432 -a '${{ inputs.fly-db-name }}' &
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Run backups
        run: ./fly-pg-dump-to-s3/pg-dump-to-s3.sh '${{ secrets.DATABASE_URL }}' '${{ secrets.S3_DESTINATION_URL }}'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
